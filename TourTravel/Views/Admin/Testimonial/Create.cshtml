@model TourTravel.Models.Testimonial
@{
    ViewData["Title"] = "Add Testimonial";
    Layout = "~/Admin/Views/Shared/_Layout-common.cshtml";
}

<div class="container mt-4">
    <div class="card shadow border-0">
        <div class="card-header text-black d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Add Testimonial</h5>
            <a href="@Url.Action("Index", "Testimonial")" class="btn btn-light btn-sm">
                <i class="fa-solid fa-arrow-left"></i> Back
            </a>
        </div>

        <div class="card-body">
            <form id="submit" asp-action="Edit" method="post" novalidate>
                @Html.AntiForgeryToken()

                <div class="mb-3">
                    <label class="form-label fw-semibold">AuthorName</label><span class="text-danger">*</span>
                    <input asp-for="AuthorName" id="AuthorName" class="form-control" placeholder="Enter AuthorName" required />
                    <span asp-validation-for="AuthorName" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Role</label><span class="text-danger">*</span>
                    <input asp-for="Role" id="Role" class="form-control" rows="5" placeholder="Enter Role" required></input>
                    <span asp-validation-for="Role" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-semibold">Rating</label><span class="text-danger">*</span>
                    <input asp-for="Rating" id="Rating" class="form-control" rows="5" placeholder="Enter Rating" required></input>
                    <span asp-validation-for="Rating" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-semibold">Quote</label><span class="text-danger">*</span>
                    <textarea asp-for="Quote" id="Quote" class="form-control" rows="5" placeholder="Enter Quote" required></textarea>
                    <span asp-validation-for="Quote" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Upload Image (800×600) <span class="text-danger">*</span></label>
                    <input type="file" name="image" id="image" class="form-control" accept="image/*" required />
                </div>

                <div class="d-flex justify-content-end gap-2">

                    <button type="submit" class="btn btn-success">
                        Save
                    </button>
                    <button type="button" id="clearBtn" class="btn btn-secondary">
                        Clear
                    </button>
                </div>

            </form>
        </div>
    </div>
</div>

<!-- ✅ Toast Container -->
<div class="position-fixed top-0 end-0 p-3" style="z-index: 99999;">
    <div id="toastContainer"></div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.ckeditor.com/ckeditor5/41.4.2/classic/ckeditor.js"></script>

    <script>
        let editor;

        // ✅ Initialize CKEditor correctly
        ClassicEditor
            .create(document.querySelector('#Quote'))
            .then(newEditor => {
                editor = newEditor;
            })
            .catch(error => console.error(error));

        // ✅ Toast function
        function showToast(message, type = 'bg-primary') {
            const toastId = 'toast' + Date.now();
            const toastHtml = `
                                        <div id="${toastId}" class="toast align-items-center text-white ${type} border-0 shadow-lg mb-2"
                                            role="alert" aria-live="assertive" aria-atomic="true">
                                            <div class="d-flex">
                                                <div class="toast-body fw-semibold">${message}</div>
                                                <button type="button" class="btn-close btn-close-white me-2 m-auto"
                                                    data-bs-dismiss="toast" aria-label="Close"></button>
                                            </div>
                                        </div>`;
            $('#toastContainer').prepend(toastHtml);
            const toastEl = document.getElementById(toastId);
            const bsToast = new bootstrap.Toast(toastEl, { delay: 3000 });
            bsToast.show();
            toastEl.addEventListener('hidden.bs.toast', () => toastEl.remove());
        }
        
        // ✅ Clear button
        $('#clearBtn').click(() => {
            $('#AuthorName').val('');
            $('#Role').val('');
            $('#Rating').val('');
            if (editor) editor.setData('');
            $('.text-danger').text('');
            showToast('Form cleared successfully.', 'bg-info');
        });

        $('#submit').submit(function (e) {
            e.preventDefault();
            const AuthorName = $('#AuthorName').val().trim();
            const Role = $('#Role').val().trim();
            const Rating = $('#Rating').val().trim();
        
            const quote = editor ? editor.getData().trim() : '';

            if (!AuthorName || !Role || !Rating ) {
                showToast('Please fill all required fields.', 'bg-danger');
                return;
            }

            const imageFile = $('#image')[0].files[0];
            if (imageFile) {
                const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg'];
                const maxSize = 5 * 1024 * 1024; // 5MB

                if (!allowedTypes.includes(imageFile.type)) {
                    showToast('Only PNG, JPG, or JPEG images are allowed.', 'bg-danger');
                    return;
                }

                if (imageFile.size > maxSize) {
                    showToast('Image size must be less than 5MB.', 'bg-danger');
                    return;
                }

                // Validate image dimensions
                const img = new Image();
                img.src = URL.createObjectURL(imageFile);

                img.onload = function () {
                    if (img.width !== 800 || img.height !== 600) {
                        showToast('Image dimensions must be 800x600.', 'bg-danger');
                        return;
                    }

                    submitForm(quote);
                };

                img.onerror = function () {
                    showToast('Invalid image file.', 'bg-danger');
                    return;
                };
            } else {
                // No image uploaded, just submit
                submitForm(quote);
            }
        });

        // ✅ Separate function to submit form
        function submitForm(quote) {
            const formData = new FormData($('#submit')[0]);
            formData.set('quote', quote);

            $.ajax({
                url: '/admin/Testimonial/Create',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (res) {
                    if (res.success) {
                        showToast(res.message, 'bg-success');
                        setTimeout(() => window.location.href = '/admin/Testimonial', 1500);
                    } else {
                        showToast(res.message, 'bg-danger');
                    }
                },
                error: function () {
                    showToast('An error occurred while saving.', 'bg-danger');
                }
            });
        }


    </script>
}
