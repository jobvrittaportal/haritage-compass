@model TourTravel.Models.Blog

@{
    ViewData["Title"] = "Edit Blog";
    Layout = "~/Admin/Views/Shared/_Layout-common.cshtml";
}

<div class="container mt-4">
    <div class="card shadow border-0">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0"><i class="fa-solid fa-newspaper me-2"></i>Edit Blog</h5>
            <a href="@Url.Action("Index", "Blogs")" class="btn btn-light btn-sm">
                <i class="fa-solid fa-arrow-left"></i> Back
            </a>
        </div>

        <div class="card-body">
            <form id="blogForm" enctype="multipart/form-data" method="post" asp-action="Edit" novalidate>
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="Id" />

                <div class="mb-3">
                    <label class="form-label fw-semibold">Title <span class="text-danger">*</span></label>
                    <input asp-for="Title" class="form-control" id="Title" required />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Author <span class="text-danger">*</span></label>
                    <input asp-for="Author" class="form-control" id="Author" required />
                    <span asp-validation-for="Author" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Meta Title <span class="text-danger">*</span></label>
                    <input asp-for="MetaTitle" class="form-control" id="MetaTitle" required />
                    <span asp-validation-for="MetaTitle" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Meta Description <span class="text-danger">*</span></label>
                    <textarea asp-for="MetaDescription" id="MetaDescription" class="form-control" rows="3" required></textarea>
                    <span asp-validation-for="MetaDescription" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Slug URL <span class="text-danger">*</span></label>
                    <input asp-for="SlugUrl" class="form-control" id="SlugUrl" required />
                    <span asp-validation-for="SlugUrl" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Content <span class="text-danger">*</span></label>
                    <textarea asp-for="Content" id="Content" class="form-control" rows="6" required></textarea>
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Upload Image (800×600)</label>
                    <input type="file" name="image" id="image" class="form-control" accept="image/*" />
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <img src="@Model.ImageUrl" alt="Blog Image" class="mt-2 rounded" width="100" height="60" />
                    }
                </div>

                <div class="d-flex justify-content-end gap-2">
                    <button type="submit" class="btn btn-success">Update</button>
                    <button type="button" id="clearBtn" class="btn btn-outline-secondary">Clear</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="position-fixed top-0 end-0 p-3" style="z-index: 99999;">
    <div id="toastContainer"></div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.ckeditor.com/ckeditor5/41.4.2/classic/ckeditor.js"></script>

    <script>
        let editor;
        ClassicEditor
            .create(document.querySelector('#Content'))
            .then(newEditor => editor = newEditor)
            .catch(error => console.error(error));

        function showToast(message, type = 'bg-primary') {
            const toastId = 'toast' + Date.now();
            const html = `<div id="${toastId}" class="toast align-items-center text-white ${type} border-0 shadow-lg mb-2">
                                    <div class="d-flex">
                                        <div class="toast-body fw-semibold">${message}</div>
                                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                                    </div>
                                  </div>`;
            $('#toastContainer').prepend(html);
            const el = document.getElementById(toastId);
            const toast = new bootstrap.Toast(el, { delay: 3000 });
            toast.show();
            el.addEventListener('hidden.bs.toast', () => el.remove());
        }

        $('#clearBtn').click(() => {
            $('#blogForm')[0].reset();
            if (editor) editor.setData('');
            $('.text-danger').text('');
        });

        $('#blogForm').submit(function (e) {
            e.preventDefault();
            const title = $('#Title').val().trim();
            const author = $('#Author').val().trim();
            const metaTitle = $('#MetaTitle').val().trim();
            const metaDescription = $('#MetaDescription').val().trim();
            const slug = $('#SlugUrl').val().trim();
            const content = editor ? editor.getData().trim() : '';

            if (!title || !author || !metaTitle || !metaDescription || !slug || !content) {
                showToast('Please fill all required fields.', 'bg-danger');
                return;
            }

            const imageFile = $('#image')[0].files[0];
            if (imageFile) {
                const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg'];
                const maxSize = 5 * 1024 * 1024; // 5MB

                if (!allowedTypes.includes(imageFile.type)) {
                    showToast('Only PNG, JPG, or JPEG images are allowed.', 'bg-danger');
                    return;
                }

                if (imageFile.size > maxSize) {
                    showToast('Image size must be less than 5MB.', 'bg-danger');
                    return;
                }

                // Validate image dimensions
                const img = new Image();
                img.src = URL.createObjectURL(imageFile);

                img.onload = function () {
                    if (img.width !== 800 || img.height !== 600) {
                        showToast('Image dimensions must be 800x600.', 'bg-danger');
                        return;
                    }

                    // ✅ If everything is valid, submit form
                    submitForm(content);
                };

                img.onerror = function () {
                    showToast('Invalid image file.', 'bg-danger');
                    return;
                };
            } else {
                // No image uploaded, just submit
                submitForm(content);
            }
        });

        // ✅ Separate function to submit form
        function submitForm(description) {
            const formData = new FormData($('#blogForm')[0]);
            formData.set('content', description);

            $.ajax({
                url: '/admin/Blogs/Edit',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (res) {
                    if (res.success) {
                        showToast(res.message, 'bg-success');
                        setTimeout(() => window.location.href = '/admin/Blogs', 1500);
                    } else {
                        showToast(res.message, 'bg-danger');
                    }
                },
                error: function () {
                    showToast('An error occurred while saving.', 'bg-danger');
                }
            });
        }

        //     const formData = new FormData(this);
        //     formData.set('Content', content);

        //     $.ajax({
        //         url: '/admin/Blogs/Edit',
        //         type: 'POST',
        //         data: formData,
        //         processData: false,
        //         contentType: false,
        //         success: function (res) {
        //             if (res.success) {
        //                 showToast(res.message, 'bg-success');
        //                 setTimeout(() => window.location.href = '/admin/Blogs', 1500);
        //             } else {
        //                 showToast(res.message, 'bg-danger');
        //             }
        //         },
        //         error: function () {
        //             showToast('An error occurred while updating.', 'bg-danger');
        //         }
        //     });
        // });
    </script>
}
